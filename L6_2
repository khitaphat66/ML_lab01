import numpy as np
import pandas as pd

# ข้อมูลที่กำหนด (รวม 10 จุด)
data = np.array([
    [0, 0],   # Point 1
    [2, 5],   # Point 2
    [3, 1],   # Point 3
    [5, 4],   # Point 4
    [7, 7],   # Point 5
    [11, 1],  # Point 6
    [13, 5],  # Point 7
    [15, 2],  # Point 8
    [16, 6],  # Point 9
    [19, 4]   # Point 10
])

# Centroids ที่กำหนดให้เป็นค่าเริ่มต้น
centroids = np.array([
    [1, 0],   # c1
    [5, 7],   # c2
    [10, 4]   # c3
])

# ฟังก์ชันคำนวณ Euclidean Distance
def euclidean_distance(point, centroid):
    return np.sqrt(np.sum((point - centroid) ** 2))

# รอบที่ 1
results_1 = []

for i, point in enumerate(data):
    distances = [euclidean_distance(point, centroid) for centroid in centroids]
    cluster = np.argmin(distances) + 1  # ค้นหาคลัสเตอร์ที่ใกล้ที่สุด (1-based index)
    results_1.append([i + 1, point[0], point[1]] + distances + [cluster])

# สร้าง DataFrame สำหรับผลลัพธ์รอบที่ 1
columns = ['Point', 'A1', 'A2', 'd1', 'd2', 'd3', 'Cluster']
results_df_1 = pd.DataFrame(results_1, columns=columns)

# แสดงผลลัพธ์รอบที่ 1
print("ผลการทดลองรอบที่ 1:")
print(results_df_1.round(3))

# อัปเดต centroid สำหรับรอบที่ 2
new_centroids = []
for i in range(3):
    cluster_points = data[results_df_1['Cluster'] == (i + 1)]
    if cluster_points.size > 0:
        new_centroids.append(np.mean(cluster_points, axis=0))
    else:
        new_centroids.append(centroids[i])  # ใช้ centroid เก่า หากไม่มีจุดในคลัสเตอร์

new_centroids = np.array(new_centroids)

# รอบที่ 2
results_2 = []

for i, point in enumerate(data):
    distances = [euclidean_distance(point, centroid) for centroid in new_centroids]
    cluster = np.argmin(distances) + 1  # ค้นหาคลัสเตอร์ที่ใกล้ที่สุด (1-based index)
    results_2.append([i + 1, point[0], point[1]] + distances + [cluster])

# สร้าง DataFrame สำหรับผลลัพธ์รอบที่ 2
results_df_2 = pd.DataFrame(results_2, columns=columns)

# แสดงผลลัพธ์รอบที่ 2
print("\nผลการทดลองรอบที่ 2:")
print(results_df_2.round(3))
